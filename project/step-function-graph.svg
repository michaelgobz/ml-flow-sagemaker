<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "https://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" class="sc-dExYaf bArNQW graph" data-testid="graph" role="img" aria-labelledby="polymath-graph-title" width="279" height="399"><title id="polymath-graph-title">Workflow Studio State Machine Graph</title><g transform="translate(12,12)" class="new-look-graph"><g class="nodes"><g class="node-container" transform="translate(127.5,22)"><g><circle class="sc-bBeLUv cQeapS shape" r="22"/><text class="sc-fvtFIe alrJq label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">Start</tspan></text></g></g><g class="node-container" transform="translate(127.5,103.5)"><g class="sc-fhzFiK gRmZVI node state Task" data-testid="graph-Serialise S3 Image" data-state-id="Serialise S3 Image" data-state-type="Task"><g class="new-look-state-node "><rect x="-120" y="-24.5" width="240" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-120,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-104,-24)"><rect fill="var(--color-background-container-header-ni4jv3, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-ekuw58, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-ekuw58, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-lam" aria-hidden="true"><title>Lambda</title></use></g><g class="text-lines" transform="translate(-48,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">Lambda: Invoke</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Serialise S3 Image</tspan></text></g></g></g></g><g class="node-container" transform="translate(127.5,187.5)"><g class="sc-fhzFiK gRmZVI node state Task" data-testid="graph-Classifiy the Image" data-state-id="Classifiy the Image" data-state-type="Task"><g class="new-look-state-node "><rect x="-120" y="-24.5" width="240" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-120,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-104,-24)"><rect fill="var(--color-background-container-header-ni4jv3, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-ekuw58, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-ekuw58, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-lam" aria-hidden="true"><title>Lambda</title></use></g><g class="text-lines" transform="translate(-48,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">Lambda: Invoke</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Classifiy the Image</tspan></text></g></g></g></g><g class="node-container" transform="translate(127.5,271.5)"><g class="sc-fhzFiK gRmZVI node state Task" data-testid="graph-Threshold the Performance" data-state-id="Threshold the Performance" data-state-type="Task"><g class="new-look-state-node "><rect x="-127.5" y="-24.5" width="255" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-127.5,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-111.5,-24)"><rect fill="var(--color-background-container-header-ni4jv3, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-ekuw58, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-ekuw58, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-lam" aria-hidden="true"><title>Lambda</title></use></g><g class="text-lines" transform="translate(-55.5,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">Lambda: Invoke</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Threshold the Performance</tspan></text></g></g></g></g><g class="node-container" transform="translate(127.5,353)"><g><circle class="sc-bBeLUv cQeapS shape" r="22"/><text class="sc-fvtFIe alrJq label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">End</tspan></text></g></g></g><g class="edges"><g class="sc-jxOSlx hpfXAX edge"><path id="state-Serialise S3 Image:state-Classifiy the Image:normal" d="M127.5,128L127.5,130.91666666666666C127.5,133.83333333333334,127.5,139.66666666666666,127.5,145.5C127.5,151.33333333333334,127.5,157.16666666666666,127.5,160.08333333333334L127.5,163" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-jxOSlx hpfXAX edge"><path id="start:state-Serialise S3 Image" d="M127.5,44L127.5,46.916666666666664C127.5,49.833333333333336,127.5,55.666666666666664,127.5,61.5C127.5,67.33333333333333,127.5,73.16666666666667,127.5,76.08333333333333L127.5,79" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-jxOSlx hpfXAX edge"><path id="state-Classifiy the Image:state-Threshold the Performance:normal" d="M127.5,212L127.5,214.91666666666666C127.5,217.83333333333334,127.5,223.66666666666666,127.5,229.5C127.5,235.33333333333334,127.5,241.16666666666666,127.5,244.08333333333334L127.5,247" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-jxOSlx hpfXAX edge"><path id="state-Threshold the Performance:end:normal" d="M127.5,296L127.5,298.9166666666667C127.5,301.8333333333333,127.5,307.6666666666667,127.5,313.5C127.5,319.3333333333333,127.5,325.1666666666667,127.5,328.0833333333333L127.5,331" marker-end="url(#arrowhead)" fill="none"/></g></g><defs><marker id="arrowhead" markerWidth="8" markerHeight="6" refX="7" refY="3" orient="auto" class="sc-iMWBiJ RpdqN"><polygon points="0 0, 8 3, 0 6"/></marker><marker id="highlighted-arrowhead" markerWidth="6" markerHeight="4" refX="5" refY="2" orient="auto" class="sc-iMWBiJ RpdqN"><polygon points="0 0, 6 2, 0 4"/></marker><marker id="error-arrowhead" markerWidth="6" markerHeight="4" refX="5" refY="2" orient="auto" class="sc-iMWBiJ RpdqN"><polygon points="0 0, 6 2, 0 4"/></marker><marker id="large-arrowhead" markerWidth="10" markerHeight="8" refX="9" refY="4" orient="auto" class="sc-iMWBiJ RpdqN"><polygon points="0 0, 10 4, 0 8"/></marker><marker id="large-highlighted-arrowhead" markerWidth="5.5" markerHeight="4" refX="4.5" refY="2" orient="auto" class="sc-iMWBiJ RpdqN"><polygon points="0 0, 5.5 2, 0 4"/></marker><marker id="large-error-arrowhead" markerWidth="10" markerHeight="8" refX="9" refY="4" orient="auto" class="sc-iMWBiJ RpdqN"><polygon points="0 0, 10 4, 0 8"/></marker><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-orange"><stop stop-color="#C8511B" offset="0%"/><stop stop-color="#FF9900" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-turquoise"><stop stop-color="#055F4E" offset="0%"/><stop stop-color="#56C0A7" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-blue"><stop stop-color="#2E27AD" offset="0%"/><stop stop-color="#527FFF" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-pink"><stop stop-color="#B0084D" offset="0%"/><stop stop-color="#FF4F8B" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-red"><stop stop-color="#BD0816" offset="0%"/><stop stop-color="#FF5252" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-green"><stop stop-color="#1B660F" offset="0%"/><stop stop-color="#6CAE3E" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-purple"><stop stop-color="#4D27A8" offset="0%"/><stop stop-color="#A166FF" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-grey"><stop stop-color="#DCDCDC" offset="0%"/><stop stop-color="#F6F5F7" offset="100%"/></linearGradient>,<linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-ag"><stop stop-color="#BC1356" offset="0%"/><stop stop-color="#F34482" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-athena"><stop stop-color="#5930B5" offset="0%"/><stop stop-color="#945DF2" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-emr"><stop stop-color="#5930B5" offset="0%"/><stop stop-color="#945DF2" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-glue"><stop stop-color="#5930B5" offset="0%"/><stop stop-color="#945DF2" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-sns"><stop stop-color="#BC1356" offset="0%"/><stop stop-color="#F34482" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-states"><stop stop-color="#BC1356" offset="0%"/><stop stop-color="#F34482" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-generic"><stop stop-color="#ccc" offset="0%"/><stop stop-color="#ddd" offset="100%"/></linearGradient><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" id="icon-service-lam"><polygon fill="url(#gradient-orange)" fill-rule="nonzero" points="0 0 48 0 48 48 0 48"/><g transform="translate(11, 10)" fill="#FFFFFF"><path d="M26.5889213,27.8937088 L19.6925948,27.8937088 C19.4772752,27.8931074 19.2813916,27.7706914 19.1888047,27.578869 L9.43766764,7.45673404 L5.31218659,7.45673404 C5.00303594,7.45673404 4.75241983,7.20943823 4.75241983,6.90438337 L4.75241983,0.828526005 C4.75241983,0.523471153 5.00303594,0.276175335 5.31218659,0.276175335 L13.9325948,0.276175335 C14.1479143,0.276776788 14.3437979,0.399192787 14.4363848,0.591015217 L24.1427405,20.7131501 L26.5889213,20.7131501 C26.8980719,20.7131501 27.148688,20.9604459 27.148688,21.2655008 L27.148688,27.3413582 C27.148688,27.646413 26.8980719,27.8937088 26.5889213,27.8937088 Z M20.0452478,26.7890075 L26.0291545,26.7890075 L26.0291545,21.8178515 L23.7900875,21.8178515 C23.5747679,21.81725 23.3788843,21.694834 23.2862974,21.5030116 L13.5799417,1.38087667 L5.87755102,1.38087667 L5.87755102,6.3520327 L9.79591837,6.3520327 C10.0112379,6.35263416 10.2071215,6.47505016 10.2997085,6.66687259 L20.0452478,26.7890075 Z"/><path d="M8.10542274,27.8937099 L0.82845481,27.8937099 C0.635054571,27.8940907 0.455155006,27.7959347 0.352653061,27.634104 C0.243858391,27.4681848 0.233185428,27.2575536 0.324664723,27.0817533 L7.93749271,11.3894708 C8.03007964,11.1976484 8.22596323,11.0752324 8.4412828,11.0746298 L8.4412828,11.0746298 C8.65533487,11.0742082 8.85089022,11.1942751 8.94507289,11.3839473 L12.5891545,18.7799228 C12.6634688,18.931712 12.6634688,19.1086786 12.5891545,19.2604679 L8.6148105,27.5457279 C8.53147526,27.7523199 8.33072312,27.8894609 8.10542274,27.8937099 L8.10542274,27.8937099 Z M1.72408163,26.7890075 L7.75276968,26.7890075 L11.4640233,19.0560981 L8.44688047,12.8973881 L1.72408163,26.7890075 Z"/></g></g></defs></g><style data-styled="true" data-styled-version="5.3.11">.gRmZVI{cursor:pointer;}/*!sc*/
data-styled.g44[id="sc-fhzFiK"]{content:"gRmZVI,"}/*!sc*/
.hpfXAX{stroke:#555;background-color:#555;stroke-width:1px;}/*!sc*/
data-styled.g45[id="sc-jxOSlx"]{content:"hpfXAX,"}/*!sc*/
.RpdqN{fill:var(--color-text-form-secondary-rh78tu,#687078);}/*!sc*/
data-styled.g78[id="sc-iMWBiJ"]{content:"RpdqN,"}/*!sc*/
.alrJq{font-weight:400;font-size:12px;line-height:16px;font-family:Amazon Ember,Arial,Roboto,Arial,sans-serif;text-shadow:none;fill:var(--color-text-button-primary-default-ljg1xz,#16191f);}/*!sc*/
data-styled.g79[id="sc-fvtFIe"]{content:"alrJq,"}/*!sc*/
.cQeapS{fill:#fff9cc;stroke:var(--color-text-form-secondary-rh78tu,#687078);stroke-width:0.6px;}/*!sc*/
data-styled.g80[id="sc-bBeLUv"]{content:"cQeapS,"}/*!sc*/
</style><style>
.new-look-state-node &gt; rect:first-of-type {
  stroke: #687078;
  stroke-width: 1px;
  fill: #FFFFFF;
}

.new-look-state-node .error-icon circle {
 stroke-linejoin: round;
}

.new-look-state-node .error-icon circle, .new-look-state-node .error-icon path {
 stroke: var(--color-border-status-error-xj05xm, #d13212);
 fill: none;
 stroke-width: 2px;
}

.new-look-state-node.has-errors &gt; rect:first-of-type {
 stroke: var(--color-border-status-error-xj05xm, #d13212);
 fill: var(--color-background-status-error-oemu7d, #fdf3f1);
}

.new-look-state-node.has-errors &gt; .bounding-box &gt; .new-look-state-node-sub &gt; rect {
  stroke: var(--color-border-status-error-xj05xm, #d13212);
  fill: var(--color-background-status-error-oemu7d, #fdf3f1);
}

.new-look-state-node .handle path {
  stroke: var(--color-border-dropdown-item-hover-gqjku2, #879596);
  stroke-width: 1px;
  fill: none;
}

.new-look-state-node {
  font-weight: 400;
  font-family: Amazon Ember, Arial, Roboto, Arial, sans-serif;
  text-shadow: none;
}

.new-look-state-node .line1 {
  fill: #687078;
  font-size: 12px;
}

.new-look-state-node .line2 {
  fill: #16191f;
}

.selected.node &gt; .new-look-state-node &gt; rect,
.selected.node &gt; .new-look-state-node &gt; .new-look-state-node &gt; rect,
.selected.node &gt; .new-look-state-node &gt; .bounding-box &gt; rect,
.selected.node &gt; .new-look-state-node.has-errors &gt; rect,
.selected.node &gt; .new-look-state-node.has-errors &gt; .bounding-box &gt; rect,
.selected.node &gt; .new-look-state-node.has-errors &gt; .new-look-state-node &gt; rect,
.selected.node &gt; .new-look-state-node &gt; .bounding-box &gt; .new-look-state-node-sub &gt; rect
 {
  stroke: var(--color-border-status-info-q9np44, #0073bb);
  fill: var(--color-background-status-info-pgxhez, #f1faff);
  stroke-width: 1px;
}

.new-look-state-node-sub .item-source.not-specified {
  height: 15px;
  color: #687078;
  font-family: "Amazon Ember";
  font-size: 12px;
  letter-spacing: 0;
  line-height: 16px;
  font-weight: 400;
}
.new-look-state-node-sub .item-source .item-source_name{
  font-weight: 600;
}
.new-look-state-node-sub .item-source.not-specified .item-source_name{
  font-weight: 400;
}

.new-look-state-node-sub .item-source.not-specified {
  font-style: italic;
}

.new-look-state-node-sub &gt; rect,
.new-look-state-node &gt; .bounding-box &gt; rect {
  stroke: var(--color-border-control-default-8uhjl0, #687078);
  fill: #ffffff;
}

.new-look-graph .drag-source {
  opacity: 0.2;
}

.new-look-graph .edge, .new-look-graph path.starting-connection {
  stroke-width: 1px;
  stroke: var(--color-text-form-secondary-rh78tu, #687078);
  marker-end: url(#large-arrowhead);
}

.new-look-graph .edge-label {
  cursor: pointer;
}

.new-look-graph .edge-label rect {
  stroke-width: 1px;
  stroke: var(--color-border-control-default-8uhjl0, #687078);
  fill: #fafafa;
}

.new-look-graph .edge-label.selected rect {
  stroke: var(--color-border-status-info-q9np44, #0073bb);
  fill: var(--color-background-status-info-pgxhez, #f1faff);
  stroke-width: 0.6px;
}



.new-look-graph .edge-label .label {
  fill: var(--color-text-form-secondary-rh78tu, #687078);
  font-family: Amazon Ember, Arial, Roboto, Arial, sans-serif;
}

/* centering the shape text */
@-moz-document url-prefix() {
  .new-look-graph .shape + text,
  .new-look-graph .edge-label text {
    transform: translateY(3.5px);
  }
}

.new-look-graph .edge path {
  marker-end: url(#large-arrowhead) !important;
}

.new-look-graph .edge.selected path{
  stroke: var(--color-border-status-info-q9np44, #0073bb);
  stroke-width: 1.1px;
}

.new-look-graph .edge.dragging-over path, .new-look-graph  g.dragging-over .starting-connection {
  stroke: #5C86FF;
  stroke-width: 2px;
}

.new-look-graph .edge.dragging-over path, .new-look-graph .dragging-over path.starting-connection {
  marker-end: url(#large-highlighted-arrowhead) !important;
}

.new-look-graph .edge.dragging-over .edge-label text {
  fill: #5C86FF;
}

#large-highlighted-arrowhead {
  fill: #5C86FF;
}

#large-highlighted-arrowhead path {
  stroke: none;
}

.new-look-graph .edge.drop-not-supported path, g.drop-not-supported .starting-connection {
  stroke: red;
}

.new-look-graph .edge.drop-not-supported .edge-label text {
  fill: red;
}

.new-look-graph .edge.drop-not-supported path {
  marker-end: url(#large-error-arrowhead) !important;
}

#large-error-arrowhead {
  fill: red;
}

.node-container * &gt; .icon  {
  &gt; rect {
    fill: #fafafa;
  }
  &gt; line {
    stroke: #d5dbdb;
  }
}


.node.Placeholder.dragging-over rect {
  stroke: var(--color-border-status-info-q9np44, #0073bb);
  fill: var(--color-background-status-info-pgxhez, #f1faff);
  stroke-width: 2px;
}

.node.Placeholder.dragging-over .label {
  fill: var(--color-text-status-info-aq7yd6, #0073bb);
}

g.Placeholder rect {
  stroke-dasharray: 5 4;
  stroke: var(--color-border-dropdown-item-hover-gqjku2, #879596);
  fill: #ffffff;
  stroke-width: 1px;
}

g.Placeholder .label {
  font-style: italic;
  fill: var(--color-text-input-placeholder-epedqe, #687078);
}

.node.Placeholder.drop-not-supported rect {
  stroke: red;
}

.node.Placeholder.drop-not-supported .label {
  fill: red;
}
</style><style>.line2 { font-size: 14px }</style></svg>